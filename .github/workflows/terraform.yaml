# name: "Terraform"
# description: "The complete Terraform workflow."

---

on:
  workflow_call:
    inputs:
      # github_repository:
      #   description: "The GitHub repository to scan."
      #   type: string
      #   required: true

      # github_ref:
      #   description: "The GitHub Ref."
      #   type: string
      #   required: true

      # github_sha:
      #   description: "The GitHub SHA."
      #   type: string
      #   required: true

      # github_server_url:
      #   description: "The GitHub server URL."
      #   type: string
      #   required: true

      working_directory:
        description: "The working directory of the Terraform project."
        type: string
        required: true

      terraform_version:
        description: "The version of Terraform command-line to use."
        type: string
        default: "1.1.2"
        required: false
      
      # chdir:
      #   description: "The directory to run Terraform in."
      #   type: string
      #   required: false

    secrets:
      # bc_api_key:
      #   description: "The API key for bridgecrew.io"
      #   required: true
      tfsec_token:
        description: "The GitHub API token."
        required: true

      cli_config_credentials_token:
          description: "The credentials token for the Terraform Cloud."
          required: true

jobs:
  tfsec:
    name: "tfsec"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Run Checkout by GitHub Actions"
        uses: letsrockthefuture/reusable-workflows/templates/checkout@main

      - name: "Run tfsec by Aquasec"
        uses: letsrockthefuture/reusable-workflows/templates/tfsec@main
        with:
          cli_config_credentials_token: ${{ secrets.cli_config_credentials_token }}
          working_directory: ${{ inputs.working_directory }}
          tfsec_token: ${{ secrets.tfsec_token }}

  # checkov:
  #   name: "Checkov"
  #   runs-on: "ubuntu-latest"
  #   steps:
  #     - name: "Run Checkov by bridgecrew.io"
  #       uses: letsrockthefuture/reusable-workflows/templates/checkov@main
  #       with:
  #         bc_api_key: ${{ secrets.bc_api_key }}
  #         github_repository: ${{ inputs.github_repository }}
  #         github_ref: ${{ inputs.github_ref }}
  #         github_sha: ${{ inputs.github_sha }}
  #         github_server_url: ${{ inputs.github_server_url }}

  plan:
    name: "Plan"
    runs-on: "ubuntu-latest"
    needs:
      - tfsec
      # - checkov
    steps:
      - name: "Run Checkout by GitHub Actions"
        uses: letsrockthefuture/reusable-workflows/templates/checkout@main

      - name: "Set up Terraform credentials"
        uses: letsrockthefuture/reusable-workflows/templates/terraform@main
        with:
          cli_config_credentials_token: ${{ secrets.cli_config_credentials_token }}

      - name: "Plan"
        uses: letsrockthefuture/reusable-workflows/templates/terraform/plan@main
        continue-on-error: true
        env:
          CHDIR: ${{ inputs.working_directory }}

  apply:
    name: "Apply"
    runs-on: "ubuntu-latest"
    needs:
      - plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
    steps:
      - name: "Run Checkout by GitHub Actions"
        uses: letsrockthefuture/reusable-workflows/templates/checkout@main

      - name: "Set up Terraform credentials"
        uses: letsrockthefuture/reusable-workflows/templates/terraform@main
        with:
          cli_config_credentials_token: ${{ secrets.cli_config_credentials_token }}

      - name: "Apply"
        uses: letsrockthefuture/reusable-workflows/templates/terraform/apply@main
        env:
          CHDIR: ${{ inputs.working_directory }}
