name: "Terraform"
# description: "Run the Terraform `plan` & `apply` commands on project."

on:
  workflow_call:
    inputs:
      terraform_version:
        description: "The version of Terraform command-line to use."
        type: string
        default: "1.1.0"
        required: false

jobs:
  tfsec:
    name: "tfsec"
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: "terraform"
    steps:
      - name: "Run tfsec by Aquasec"
        uses: letsrockthefuture/reusable-workflows/templates/tfsec@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  checkov:
    name: "Checkov"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Run Checkov by bridgecrew.io"
        uses: letsrockthefuture/reusable-workflows/templates/checkov@main

  plan:
    name: "Plan"
    runs-on: "ubuntu-latest"
    needs:
      - tfsec
      - checkov
    steps:
      - name: "Set up Terraform credentials"
        uses: letsrockthefuture/reusable-workflows/templates/terraform@main
        with:
          cli_config_credentials_token: ${{ secrets.cli_config_credentials_token }}

      - name: "Plan"
        uses: letsrockthefuture/reusable-workflows/templates/terraform/plan@main
        continue-on-error: true

  apply:
    name: "Apply"
    runs-on: "ubuntu-latest"
    needs:
      - plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
    steps:
      - name: "Set up Terraform credentials"
        uses: letsrockthefuture/reusable-workflows/templates/terraform@main
        with:
          # cli_config_credentials_token: ${{ secrets.cli_config_credentials_token }}
          cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}

      - name: "Apply"
        uses: letsrockthefuture/reusable-workflows/templates/terraform/apply@main
